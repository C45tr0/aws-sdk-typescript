  /*
   * apiVersion: {{descriptor.metadata.apiVersion}}
   * endpointPrefix: {{descriptor.metadata.endpointPrefix}}
   * serviceAbbreviation: {{descriptor.metadata.serviceAbbreviation}}
   * signatureVersion: {{descriptor.metadata.signatureVersion}}
   * protocol: {{descriptor.metadata.protocol}}
   *
   * {{{descriptor.documentation}}}
   *
   */
  export class {{name}} extends Service {
    constructor(options?: any);
    endpoint: Endpoint;
{{#each descriptor.operations}}
    /**
     * {{{this.documentation}}}
     *
{{#each this.errors}}
     * @error {{this.shape}} {{{this.documentation}}}  
{{/each}}    
     */
    {{{camelCase @key}}}(
      {{~#if this.input.shape}}params: {{../../name}}.{{this.input.shape}}, {{/if~}}
      callback?: ( {{~null~}}
        err: {{#each this.errors~}}{{../../name}}.{{this.shape}}|{{/each}}any, {{null~}}
        data: {{#if this.output.shape}}{{../../name}}.{{this.output.shape}}|{{/if}}any) => void {{~null~}}
    ): Request;
{{/each}}

{{#each extraClientMethods}}
    /***
     * Found on JS Sources - Sorry for the inconvenience :)
     * {{{this.comment}}}
     **/
    {{{this.name}}}(...args: any[]): any
{{/each}}
  }

  export module {{name}} {
{{!-- Alias definitions --}}
{{#each descriptor.aliases}}
    {{#if comment}}/**{{{comment}}} **/{{/if}}
    export type {{name}} = {{type}};
{{/each}}

{{!-- Interface definitions --}}
{{#each descriptor.structures}}
    export interface {{name}} {
{{#each members}}
{{#if this.documentation}}
        /*** {{{this.documentation}}} **/
{{/if}}
        {{@key}}{{this.required}}: {{this.shape}};
{{/each}}
    }
{{/each}}
  }
